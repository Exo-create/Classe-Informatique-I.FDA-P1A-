name: Move Issues to Done Column by Date

on:
  schedule:
    - cron: '0 16 * * *' # Exécute tous les jours à 16h
  workflow_dispatch:

jobs:
  move_issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install @octokit/rest @octokit/plugin-rest-endpoint-methods

      - name: Create move_issues.mjs
        run: |
          echo "import { Octokit } from '@octokit/rest';
          import { restEndpointMethods } from '@octokit/plugin-rest-endpoint-methods';

          const MyOctokit = Octokit.plugin(restEndpointMethods);
          const octokit = new MyOctokit({ auth: process.env.GITHUB_TOKEN });

          async function moveIssues() {
            console.log('Fetching issues...');
            const issues = await octokit.issues.listForRepo({
              owner: process.env.GITHUB_OWNER,
              repo: process.env.GITHUB_REPO,
              state: 'open'
            });

            console.log('Issues fetched:', issues.data.length);
            const today = new Date();
            for (const issue of issues.data) {
              console.log('Processing issue:', issue.number);
              const match = issue.body.match(/Date de fermeture: (\d{4}-\d{2}-\d{2})/);
              if (match) {
                const closeDate = new Date(match[1]);
                console.log('Close date:', closeDate);
                if (closeDate < today) {
                  console.log('Moving issue to Done column:', issue.number);
                  const projectCards = await octokit.projects.listCards({
                    column_id: process.env.GITHUB_DONE_COLUMN_ID
                  });

                  const card = projectCards.data.find(card => card.content_url.includes(issue.number));
                  if (card) {
                    await octokit.projects.moveCard({
                      card_id: card.id,
                      position: 'top'
                    });
                  } else {
                    console.log('No card found for issue:', issue.number);
                  }
                }
              }
            }
          }

          moveIssues();" > move_issues.mjs

      - name: Run move_issues.mjs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_OWNER: 'Exo-create'
          GITHUB_REPO: 'Classe-Informatique-I.FDA-P1A-'
          GITHUB_DONE_COLUMN_ID: ${{ secrets.GITHUB_DONE_COLUMN_ID }}
        run: node move_issues.mjs
